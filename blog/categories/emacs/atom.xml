<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: emacs | yoshiori.github.io]]></title>
  <link href="http://yoshiori.github.io/blog/categories/emacs/atom.xml" rel="self"/>
  <link href="http://yoshiori.github.io/"/>
  <updated>2014-07-10T23:02:49+09:00</updated>
  <id>http://yoshiori.github.io/</id>
  <author>
    <name><![CDATA[Yoshiori SHOJI]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git で branch 切り替えた時とかに emacs で開いてるファイルの buffer を更新]]></title>
    <link href="http://yoshiori.github.io/blog/2013/01/31/file-update-emacs/"/>
    <updated>2013-01-31T16:14:00+09:00</updated>
    <id>http://yoshiori.github.io/blog/2013/01/31/file-update-emacs</id>
    <content type="html"><![CDATA[<p>Git で作業してると branch 切り替えたり stash したり色々と emacs の buffer で開いてるファイルが裏で更新されることが増えた。
で、気づかずにセーブしようとして確認でて上書きすると裏であった変更消しちゃうし開き直すと今書いたの消えちゃうしとか……</p>

<p>なんかそういう設定有るはずだよなぁとか思いながら見つけられてなかったんだけど、やっと見つけた。</p>

<p><code>cl
;; 変更のあったファイルの自動再読み込み
(global-auto-revert-mode 1)
</code></p>

<p>これで安心！！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[.emacs を一年に一回消してる]]></title>
    <link href="http://yoshiori.github.io/blog/2013/01/30/dot-emacs-renewal/"/>
    <updated>2013-01-30T19:10:00+09:00</updated>
    <id>http://yoshiori.github.io/blog/2013/01/30/dot-emacs-renewal</id>
    <content type="html"><![CDATA[<h3>ここ何年か .emacs と .zsh は一年に一回くらいの頻度で全消ししてる。</h3>

<p>なんか古い emacs の設定とか色々入ってて秘伝のタレみたいになっちゃうのが .emacs 的な印象なんだけど、
やっぱり自分でもなんとかしたいなぁと思って思い切って <code>rm -rm .emacs</code> してみたら結構良かったので一年に一回くらいの頻度で消すようにしてる。</p>

<p>大掃除とかじゃなく一から作りなおさないとなんか秘伝のタレ的なの残っちゃうので結構おすすめ。</p>

<p>今回は emacs24 に完全移行って事て anything → helm した。
 あと、ここ数年は Mac しか使ってないので OS の判定とかもしなくした。</p>

<h3>emacs24 の package-install 便利</h3>

<p>なんかほぼ使いたいものはこれで入れられるし、入れると勝手に require してくれちゃうみたいで、
メジャーモードとかはインストールしたらそのまま使えた。</p>

<p>リポジトリだけ追加したので</p>

<p><code>cl
(when (require 'package nil t)
  (add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/"))
  (package-initialize))
</code>
を追加した。</p>

<h3>anythong(helm) 無いと生きていけない</h3>

<p>脳みその容量が全然足りないので、便利そうな elisp 見つけてもショートカットとか覚えられない！！！
って事ばかりなので anything(helm) が無いと生きていけない。</p>

<p>「あー kill-ring の中見たい」って思った時も <code>kill-r</code> 位まで打てばこんな画面が出て
そのまま実行もできるし、ショートカットキーまで教えてくれる</p>

<p><img class="<a" src="href="https://www.evernote.com/shard/s4/sh/b4d64aab-ff87-4331-bb87-2004fe12046f/dcd015be6f071df8ab5987ae3f4e1b86/res/bb06b1a0-a5f9-48f2-9bd9-e094991fd278/skitch.png?resizeSmall&amp;width=832">https://www.evernote.com/shard/s4/sh/b4d64aab-ff87-4331-bb87-2004fe12046f/dcd015be6f071df8ab5987ae3f4e1b86/res/bb06b1a0-a5f9-48f2-9bd9-e094991fd278/skitch.png?resizeSmall&amp;width=832</a>"></p>

<p>```cl
;; &ndash;<em>&ndash; Mode: Emacs-Lisp ; Coding: utf-8 &ndash;</em>&ndash;
(require &lsquo;helm)
(require 'helm-config)
(helm-mode 1)</p>

<p>(defun my-helm ()
  (interactive)
  (helm :sources &lsquo;(</p>

<pre><code>               helm-c-source-buffers-list
               helm-c-source-recentf
               helm-c-source-files-in-current-dir
               helm-c-source-mac-spotlight
               helm-c-source-buffer-not-found)
    :buffer "*my helm*"))
</code></pre>

<p>(global-set-key (kbd &ldquo;C-x b&rdquo;) &lsquo;my-helm)
(global-set-key (kbd &ldquo;M-x&rdquo;) 'helm-M-x)</p>

<p>(setq helm-samewindow nil)
(push &lsquo;(&ldquo;<em>helm-M-x</em>&rdquo;) popwin:special-display-config)</p>

<p>;; emacsの終了時に、履歴を保存する
(remove-hook &lsquo;kill-emacs-hook 'helm-c-adaptive-save-history)</p>

<p>;; ディレイは0.2秒
(setq helm-input-idle-delay 0.02)</p>

<p>;; 候補のディレクトリが一つしかない場合に、自動的に展開しない
(setq helm-ff-auto-update-initial-value nil)
```
今のところこんな簡単な設定。</p>

<p>まだどうも helm の find-file に慣れないのでどうにかしたいなぁ……</p>
]]></content>
  </entry>
  
</feed>
